#
#
# 感谢p3terx大神的一键编译脚本
# 
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
#

name: build immortalwrt SIM AX1800T

on: 
  workflow_dispatch:

env:
  REPO_URL: https://github.com/P3N99/VB1980-237immortalwrt.git
  REPO_BRANCH: mt7915_mtwifi
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/sim_ax1800t.config
  DIY_P1_SH: script/diy-part1.sh
  DIY_P2_SH: script/diy-part2_simax1800t.sh
  UPLOAD_BIN_DIR: false  
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: ture
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
        
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone src
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load cache
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: 'mt7915'
        prefix: ${{ github.workspace }}/openwrt
        
    - name: Load feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Update& Install feeds again
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load config
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        rm -rf feeds/luci/applications/luci-app-openclash
        rm -rf feeds/luci/luci-app-openclash
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download packages
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "STATUS=success" >> $GITHUB_ENV
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: Check storage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin to artifact
      uses: actions/upload-artifact@main
      if: env.STATUS == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Cleanup bin
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "STATUS=success" >> $GITHUB_ENV
    
    - name: Upload firmware to release
      id: release
      uses: ncipollo/release-action@v1
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: R${{ steps.organize.outputs.release_tag }} for SIM AX18T
        allowUpdates: true
        removeArtifacts: true
        tag: ${{ steps.organize.outputs.release_tag }}
        commit: main
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE }}/*
        body: |
          - 默认IP：192.168.2.1
          - 默认密码：password

